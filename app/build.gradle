apply plugin: "com.android.application"

apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "kotlin-kapt"

apply plugin: "de.mannodermaus.android-junit5"
apply plugin: 'kotlin-allopen'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.bq.arch_example"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    sourceSets.all {
        // Add "kotlin" folder in src dirs for all source sets
        java.srcDirs += "${projectDir.absolutePath}/src/${name}/kotlin"
    }

    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    def kotlin_coroutines_version = "1.3.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "androidx.core:core-ktx:1.1.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    def kodein_version = "6.3.3"
    implementation "org.kodein.di:kodein-di-generic-jvm:$kodein_version"
    implementation "org.kodein.di:kodein-di-framework-android-x:$kodein_version"
    implementation "org.kodein.di:kodein-di-conf-jvm:$kodein_version"

    def mini_version = "1.0.7"
    implementation "com.github.bq.mini-kotlin:mini-android:$mini_version"
    implementation "com.github.bq.mini-kotlin:mini-rx2:$mini_version"
    implementation "com.github.bq.mini-kotlin:mini-rx2-android:$mini_version"
    implementation "com.github.bq.mini-kotlin:mini-kodein:$mini_version"
    implementation "com.github.bq.mini-kotlin:mini-kodein-android:$mini_version"
    kapt "com.github.bq.mini-kotlin:mini-processor:$mini_version"

    implementation 'com.google.android.material:material:1.0.0'
    implementation "androidx.recyclerview:recyclerview:1.1.0"

    def retrofit_version = "2.6.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"

    def okhttp_version = "3.13.1"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    def moshi_version = "1.8.0"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"


    def lifecycle_version = "2.1.0"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation "io.reactivex.rxjava2:rxjava:2.2.12"

    implementation "io.coil-kt:coil:0.7.0"

    testImplementation 'junit:junit:4.12'

    //Using jUnit5 in unit tests
    def junit_jupiter_version = '5.5.2'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"

    def spek_version = "1.1.5"
    // Add the dependencies on spek & its required co-dependencies to the test scope
    testImplementation("org.jetbrains.spek:spek-api:$spek_version") {
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation("org.jetbrains.spek:spek-junit-platform-engine:$spek_version") {
        exclude group: "org.junit.platform"
        exclude group: "org.jetbrains.kotlin"
    }
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    def mockito_version = "2.28.2"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"

    androidTestImplementation "com.github.bq.mini-kotlin:mini-testing:$mini_version"

    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'

    androidTestImplementation "org.mockito:mockito-android:$mockito_version"

    androidTestImplementation 'com.agoda.kakao:kakao:2.2.0'

    def espresso_version = "3.2.0"
    androidTestImplementation("androidx.test.espresso:espresso-core:$espresso_version", {
        exclude group: "androidx.annotation", module: "annotation"
    })
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso_version"
}

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.bq.arch_example.test.OpenClass'
}